// This program is a bull  and cow guessing game 
// It allows the user to repeatedly guess a four digit number at each time
// If the user guess a correct digit number and a correct position, the user get a bull otherwise a cow
// The user get a four bulls when it guess all the four correct digit number at their correct position


#include "std_lib_facilities.h"
#define INPUT_NUM 4

enum outcome{WIN,RETRY};
//This function return a random integer between 0 to 10
int get_randInt() {

	return randint(1,10);
}

string get_4digit()
//this function randomly git a four digit number and 
// return it as a string
{
	string dig = "";

	for (int i = 0; i < INPUT_NUM; i++) {
		int ch = get_randInt();
		stringstream s;
		s << ch;
		dig += s.str();
	}
	return dig;
}

int num_bull(const string& ori, const string& user) 
//this function compare ori digit generated by computer with the user defined digit
// it return the number of bull: correct number at correct possition
{
	stringstream s_ori(ori); //initialize the ori with string stream buffer
	stringstream s_user(user);//initialize the user string digit with string stream buffer

	char ch_ori = 0, ch_user = 0; // character to hold each user and original digit values
	int count = 0; // counter for number of bull
	while (s_ori >> ch_ori && s_user >> ch_user ) {
		
		if (ch_ori == ch_user)++count;
	}
	return count;
}

int num_cow(const string& ori, const string& user)
//this function compare ori digit generated by computer with the user defined digit
// it return the number of cow: correct number at wrong position
{

	stringstream s_user(user);//initialize the user string digit with string stream buffer

	char ch_ori = 0, ch_user = 0; // character to hold each user and original digit values
	int count = 0; // counter for number of cow

	for (int i = 0; i < INPUT_NUM; ++i) {
		s_user >> ch_user;
		stringstream s_ori(ori); //initialize the ori with string stream buffer
		for (int j = 0; j < INPUT_NUM; ++j) {
			s_ori >> ch_ori;
				if (ch_ori == ch_user && i != j)++count;
			
		}

	}

	return count;
}

outcome check_outc(const string& ori,const string& user, int& bull, int &cow) {



	bull = num_bull(ori, user); // number of bull from the user input

	if (bull == ori.size())return WIN; // all are correct

	cow = num_cow(ori, user);

	return RETRY;
}

bool repeat_game()
//ask the user weather to repeat game or not
{
	char ch = 0;
	cout << "Please enter 'Y' to repeat game or 'N' otherwise\n";
	while (!(tolower(ch) == 'y' || tolower(ch) == 'n'))ch = getchar();

	if (ch == 'y')return true;
	return false;
}
void execute_game() {
	string ori = get_4digit(); // original digit
	string user = "";

	while (1) {
		cout << "Please enter 4 digit number of your choice\n";
		cin.clear();
		cin >> user;

		if (!cin) error("Error: failed reading from the input stream");

		if (user.size() != INPUT_NUM) {
			cerr << "wrong input data\n";
			continue;
		}

		int cow = 0 , bull = 0; //number of cow and bull
		outcome outc = check_outc(ori, user, bull, cow);
		if (outc == WIN) {
			cout << "Congratulation: You get all the 4 bulls. The original digit number is: " << ori << endl;

			if (!repeat_game())return;
			return execute_game();
		}
		else {
			cout << "number of bull: " << bull << " number of cow: " << cow << endl;
			cout << "original 4 digit number: " << ori << endl;
		}
	}
}
int main() {
	try {
		execute_game();
	}

	catch (exception& e) {
		cerr << e.what() << endl;
	}

	catch (...) {
		cerr << "Error: Some exception" << endl;
	}
	keep_window_open();
	return 0;
}